@import 'tailwindcss';
@plugin "@tailwindcss/forms";
@plugin '@tailwindcss/typography';
@source '../node_modules/pliny';
@custom-variant dark (&:where(.dark, .dark *));

/* Core theme configuration */
@theme {
  /* Font families */
  --font-sans: var(--font-space-grotesk), ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji',
    'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';

  /* Colors - Updated to match landing page design */
  /* Primary colors - using #28282F as the base primary color */
  --color-primary-50: #f8f8f9;
  --color-primary-100: #f0f0f2;
  --color-primary-200: #e2e2e6;
  --color-primary-300: #cdcdd4;
  --color-primary-400: #b1b1be;
  --color-primary-500: #28282F;  /* Primary Accent Color */
  --color-primary-600: #232329;
  --color-primary-700: #1e1e23;
  --color-primary-800: #19191d;
  --color-primary-900: #161618;
  --color-primary-950: #0d0d0e;

  /* Custom brand colors */
  --color-brand-bg: #E6E2DB;      /* Page Background Color */
  --color-brand-card: #F9F8F5;    /* Card Background Color */
  --color-brand-text: #161613;    /* Text, Heading & Body Color */
  --color-brand-accent: #28282F;  /* Primary Accent Color */

  /* Updated gray colors to match the warm color scheme */
  --color-gray-50: #F9F8F5;   /* Card Background */
  --color-gray-100: #F2F1EC;
  --color-gray-200: #E6E2DB;  /* Page Background */
  --color-gray-300: #D4CFBF;
  --color-gray-400: #A8A299;
  --color-gray-500: #7D7770;
  --color-gray-600: #5D5851;
  --color-gray-700: #46433E;
  --color-gray-800: #2F2D29;
  --color-gray-900: #161613;  /* Text Color */
  --color-gray-950: #0D0C0A;

  /* Line heights */
  --line-height-11: 2.75rem;
  --line-height-12: 3rem;
  --line-height-13: 3.25rem;
  --line-height-14: 3.5rem;

  /* Z-index values */
  --z-60: 60;
  --z-70: 70;
  --z-80: 80;
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }

  html {
    background-color: var(--color-brand-bg);
    color: var(--color-brand-text);
  }

  body {
    background-color: var(--color-brand-bg);
    color: var(--color-brand-text);
  }

  /* Dark mode overrides */
  html.dark {
    background-color: var(--color-gray-900);
    color: var(--color-gray-100);
  }

  html.dark body {
    background-color: var(--color-gray-900);
    color: var(--color-gray-100);
  }

  a,
  button {
    outline-color: var(--color-primary-500);
  }

  a:focus-visible,
  button:focus-visible {
    outline: 2px solid;
    border-radius: var(--radius-sm);
    outline-color: var(--color-primary-500);
  }
}

@layer utilities {
  /* Brand color utilities */
  .bg-brand-bg { background-color: var(--color-brand-bg); }
  .bg-brand-card { background-color: var(--color-brand-card); }
  .text-brand-text { color: var(--color-brand-text); }
  .text-brand-accent { color: var(--color-brand-accent); }
  .bg-brand-accent { background-color: var(--color-brand-accent); }
  .border-brand-accent { border-color: var(--color-brand-accent); }

  /* Full-width hero utilities */
  .hero-section {
    margin-left: calc(-50vw + 50%);
    margin-right: calc(-50vw + 50%);
    width: 100vw;
    position: relative;
  }

  .prose {
    & a {
      color: var(--color-primary-500);
      &:hover {
        color: var(--color-primary-600);
      }
      & code {
        color: var(--color-primary-400);
      }
    }
    & :where(h1, h2) {
      font-weight: 700;
      letter-spacing: var(--tracking-tight);
      color: var(--color-brand-text);
    }
    & h3 {
      font-weight: 600;
      color: var(--color-brand-text);
    }
    & :where(code):not(pre code) {
      color: var(--color-primary-500);
    }
    & p, & li {
      color: var(--color-brand-text);
    }
  }

  .prose-invert {
    & a {
      color: var(--color-primary-500);
      &:hover {
        color: var(--color-primary-400);
      }
      & code {
        color: var(--color-primary-400);
      }
    }
    & :where(h1, h2, h3, h4, h5, h6) {
      color: var(--color-gray-100);
    }
  }
}

.task-list-item::before {
  @apply hidden;
}

.task-list-item {
  @apply list-none;
}

.footnotes {
  @apply mt-12 border-t border-gray-200 pt-8 dark:border-gray-700;
}

.data-footnote-backref {
  @apply no-underline;
}

.csl-entry {
  @apply my-5;
}

.no-scrollbar::-webkit-scrollbar {
  display: none;
}

.no-scrollbar {
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
}

/* https://stackoverflow.com/questions/61083813/how-to-avoid-internal-autofill-selected-style-to-be-applied */
input:-webkit-autofill,
input:-webkit-autofill:focus {
  transition:
    background-color 600000s 0s,
    color 600000s 0s;
}

.katex-display {
  overflow: auto hidden;
}

.content-header-link {
  opacity: 0;
  margin-left: -24px;
  padding-right: 4px;
}

.content-header:hover .content-header-link,
.content-header-link:hover {
  opacity: 1;
}

.linkicon {
  display: inline-block;
  vertical-align: middle;
}
